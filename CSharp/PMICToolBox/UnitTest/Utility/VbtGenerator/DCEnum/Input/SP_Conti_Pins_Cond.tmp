Public Enum SP_Conti_Pins
<#Loop#>
    <#PinName#><#/PinName#> = <#SeqNum#><#/SeqNum#>
<#/Loop#>
End Enum

Public Function <#SheetName#><#/SheetName#>(idx As Double) As String

    Dim SP_PinName, SPForceI, Wait_Time, On_Relay, Off_Relay, MustDiscnctPins, SPCondPin, SPCondPinV_I, TestItem, Output As String

    Select Case idx
<#Loop IsInsertNewLine="TRUE"#>
    Case <#SeqNum#><#/SeqNum#>                                                           <#PinName Left="80" Comment="TRUE"#><#/PinName#>
        SP_PinName = "<#PinName#><#/PinName#>"
        SPForceI = "<#SpecificLimit#><#/SpecificLimit#>"                           <#PinName Left="80" Comment="TRUE"#>SpecificLimit|SPLimit = <#/PinName#> 
        Wait_Time = "<#SpecificWaitTime#><#/SpecificWaitTime#>"                    <#PinName Left="80" Comment="TRUE"#>SpecificWaitTime|Wait_Time =<#/PinName#> 
        On_Relay = "<#On_Relay#><#/On_Relay#>"                                     <#PinName Left="80" Comment="TRUE"#>On_Relay|On_Relay =<#/PinName#> 
        Off_Relay = "<#Off_Relay#><#/Off_Relay#>"                                  <#PinName Left="80" Comment="TRUE"#>Off_Relay|Off_Relay =<#/PinName#> 
        MustDiscnctPins = "<#MustDiscnctPins#><#/MustDiscnctPins#>"                <#PinName Left="80" Comment="TRUE"#>MustDiscnctPins|MustDiscnctPins =<#/PinName#> 
        SPCondPin = "<#SpecCondiPin#><#/SpecCondiPin#>"                            <#PinName Left="80" Comment="TRUE"#>SpecCondiPin|SPCondPin =<#/PinName#>
        SPCondPinV_I = "<#SpecCondiPinVolt_Current#><#/SpecCondiPinVolt_Current#>" <#PinName Left="80" Comment="TRUE"#>SpecCondiPinVolt_Current|SPCondPinV_I =<#/PinName#> 
        TestItem =  "<#TestItem#><#/TestItem#>"                                  <#PinName Left="80" Comment="TRUE"#>TestItem|TM_IIL_IIH =<#/PinName#>
<#/Loop#>
    Case Else
             'SP_Leak_Pins_Cond = "Wrong_Enum_Input"
    End Select

    <#SheetName#><#/SheetName#>= SP_PinName + "&" + SPForceI + "&" + Wait_Time + "&" + On_Relay + "&" + Off_Relay + "&" + MustDiscnctPins + "&" + SPCondPin + "&" + SPCondPinV_I + "&" + TestItem

End Function


Public Function GenContiPinDic()
Dim idx As Double
Dim Pin_Num As Double
Dim PinName() As String
Dim Concat As String
Pin_Num = <#Count#><#/Count#>
ReDim SPPins(<#Count#>-1<#/Count#>) As String

Dim Dic_PinName() As String
ReDim Preserve Dic_PinName(Pin_Num)

    For idx = 0 To Pin_Num

    ReDim Preserve PinName(Pin_Num)
    PinName(idx) = Split_Concat(SP_Conti_Pins_Cond(idx), 0) '.SP_Leak_Pins

    Dic_PinName(idx) = PinName(idx)

    If ContiPinDic.Exists(Dic_PinName(idx)) Then
    Else
       ContiPinDic.Add Dic_PinName(idx), idx     'add key and item to dictionary
    End If
    Next idx

End Function


Public Function SearchDicIdx_Conti(PinName As String) As Double
Dim idx As Double
For idx = 0 To <#Count#><#/Count#>
    If ContiPinDic.Keys(idx) = PinName Then
    SearchDicIdx_Conti = idx
    Exit For
    End If
Next idx

End Function