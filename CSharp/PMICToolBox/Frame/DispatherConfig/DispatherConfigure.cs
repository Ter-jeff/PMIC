//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.0.30319.33440.
// 

using System.Xml.Serialization;

namespace FWFrame.DispatherConfig {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://www.teradyne.com/FWTool/Dispather.xsd")]
    [XmlRoot(Namespace="http://www.teradyne.com/FWTool/Dispather.xsd", IsNullable=false)]
    public partial class DispatherConfigure {
        
        private ChipConfigure[] chipConfigureField;
        
        /// <remarks/>
        [XmlElement("ChipConfigure")]
        public ChipConfigure[] ChipConfigure {
            get {
                return this.chipConfigureField;
            }
            set {
                this.chipConfigureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://www.teradyne.com/FWTool/Dispather.xsd")]
    public partial class ChipConfigure {
        
        private string chipTypeField;
        
        private ControllerMapping[] controllorMappingsField;
        
        /// <remarks/>
        public string ChipType {
            get {
                return this.chipTypeField;
            }
            set {
                this.chipTypeField = value;
            }
        }
        
        /// <remarks/>
        [XmlArrayItem(IsNullable=false)]
        public ControllerMapping[] ControllerMappings {
            get {
                return this.controllorMappingsField;
            }
            set {
                this.controllorMappingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://www.teradyne.com/FWTool/Dispather.xsd")]
    public partial class ControllerMapping {
        
        private string commandField;
        
        private string[] inputLoadersField;
        
        private string viewResolverField;
        
        private string[] interceptorsField;
        
        private string controllorField;
        
        /// <remarks/>
        public string Command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <remarks/>
        [XmlArrayItem("InputLoader", IsNullable=false)]
        public string[] InputLoaders {
            get {
                return this.inputLoadersField;
            }
            set {
                this.inputLoadersField = value;
            }
        }
        
        /// <remarks/>
        public string ViewResolver {
            get {
                return this.viewResolverField;
            }
            set {
                this.viewResolverField = value;
            }
        }
        
        /// <remarks/>
        [XmlArrayItem("Interceptor", IsNullable=false)]
        public string[] Interceptors {
            get {
                return this.interceptorsField;
            }
            set {
                this.interceptorsField = value;
            }
        }
        
        /// <remarks/>
        public string Controller {
            get {
                return this.controllorField;
            }
            set {
                this.controllorField = value;
            }
        }
    }
}
