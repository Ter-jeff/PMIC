<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAwsIBAC4fUKNxYNF/8KCRPvDgkT/w4JE/8OC
        RP/DgkT/w4JE/8OCRP/DgkT/w4JE/8KCRPvFg0X/unxAjAgFAgAIBgMAun1CjMaERf/CgkT7w4JE/8OC
        RP/DgkT/w4JE7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAECQYDALd5QJDGhUX/vn9D+sKC
        RP/DgkT/w4JE/8OCRP/DgkT/w4JE/8OCRP/CgkT/vn9C+saERv+4ez6QBgUBAAYEAwC2ekGSxoVF/8KC
        RPrFg0X/xINE/8KCRP7CgkT5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCAQIAAAAAXj4hK9SO
        SeXRjEn/xoRF/sWDRf/Fg0X/xYNF/8WDRf/Fg0X/xYNF/8aERf7RjEn/1I9K5FxCISoAAAAAAAAAAGJB
        IU7UjEn/vH5C/ZtoM/qydz37x4VG/8aERawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AAEAAAAANiQTF2xIJVSSYTDhlmQx/5VkMf6VZDH/lWQx/5VkMf6WZDH/kmEw4WxIJVQ2JBMXAAAAAAIB
        AQEAAAABDAwGAK1/QYjUi0n/k2Mw/b+AQf/KhkfIOicUHQQCAQIEAgEEBAIBBAQCAQQEAgEEBAIBBAQC
        AQQEAgEEBAIBBAMCAQYAAAABBwQCA3ZPJdF/VSj/fVQn/X1UJ/99VCf/fVQn/X9VKP92TyXRBwQCAwAA
        AAEDAgEGBAIBBAQCAQQBAgEFEQ4HAGA/IjdNNBp/ZEIiWzomFQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAHBAIEdk8k0H9VKP98VCb9fFQm/3xUJv98VCb9f1Uo/3ZP
        JNAHBAIEAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhQSIyYUEiZGFB
        ImBhQSJhYUEiYWFBImFhQSJhYUEiYWFBImFhQSJhYEAiYGRDI2SXZTPjmmgz/5lmM/6ZZzP/mWcz/5lm
        M/6aaDP/l2Uz42RDI2RgQCJgYUEiYWFBImFhQSJhYUEiYWJCImFlQyNjZEMjZmVDI2RjQiJlYUIjMtON
        SurTjUr/041K/tONSv/TjUr/041K/9ONSv/TjUr/041K/9ONSv/TjUr/0o1K/8eERv/GhEX/yIVG/8iF
        Rv/IhUb/yIVG/8aERf/HhEb/0o1K/9ONSv/TjUr/041K/9ONSv/TjUr/041K/9ONSv/TjUr/041K/tON
        Sv/TjUrqv4BD/r+AQ/2/gEP9v4BD/b+AQ/2/gEP9v4BD/b+AQ/2/gEP9v4BD/b+AQ/2/gEP9wYJE/sWE
        Rf+ncDn/jl8u/45fLv+ncTn/xYRF/8GBRP6/gEP9v4BD/b+AQ/2/gEP9v4BD/b+AQ/2/gEP9v4BD/b+A
        Q/2/gEP9v4BD/b+AQ/7DgUP+w4FD/8OBQ//DgUP/w4FD/8OBQ//DgUP/w4FD/8OBQ//DgUP/w4FD/8OB
        Q//CgUP/xIJE/7N3PP+kbTX/pG01/7N3PP/EgkT/woFD/8OBQ//DgUP/w4FD/8OBQ//DgUP/w4FD/8OB
        Q//DgUP/w4FD/8OBQ//DgUP/w4FD/sWFSP/FhUj/xYVI/8WFSP/FhUj/xYVI/8WFSP/FhUj/xYVI/8WF
        SP/FhUj/xYVI/8WFSP/FhUj/yIdJ/8qJSv/KiUr/yIdJ/8WFSP/FhUj/xYVI/8WFSP/FhUj/xYVI/8WF
        SP/FhUj/xYVI/8WFSP/FhUj/xYVI/8WFSP/FhUj/4LiN/+C4jP/guIz/4LiM/+C4jP/guIz/4LiM/+C4
        jP/guIz/4LiM/+C4jP/guIz/4LiM/+C4jP/ft4z/37eM/9+3jP/ft4z/37iM/9+4jP/fuIz/4LiM/+C4
        jP/guIz/4LiM/+C4jP/guIz/4LiM/+C4jP/guIz/4LiM/+C4jP/ivJP/4buR/+G7kf/hu5H/4buR/+G7
        kf/hu5H/4buR/+G7kf/hu5D/4buQ/+K7k//iu5X/4ruU/+G7kf/hu5H/4LuR/+K7kf/lu5P/5ruU/+S7
        k//hu5D/4LuQ/+G7kf/hu5H/4buR/+G7kf/hu5H/4buR/+G7kf/hu5H/4buR/+O9lf/huo//4bqQ/+G6
        kP/hupD/4bqQ/+G6kP/hupD/4bqP/+K7kv/iu5T/3riG/9y2ev/dt4D/4bqP/+K7lf/nupP/4bqQ/866
        hf/HuoH/1bqJ/+W6k//kupL/4LqP/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/5sKZ/+C5
        j//hupD/4bqQ/+G6kP/hupD/4bqQ/+G6j//iu5T/37iF/9OuT//MqDP/zKgw/8yoMP/Pq0D/3LNw/7u6
        e/+Dulr/cbpQ/3C6UP90ulL/lbpk/9S6if/lupL/4LqP/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6
        kP/px6D/4LmO/+G6kP/hupD/4bqQ/+G6kP/huo//4ruT/9+4g//Pqjn/y6co/8yoLv/MqC//zKgw/8qm
        JP/UtF3/oMF3/2W5R/9vuk//b7pP/266Tv9mukr/fLpW/9O6h//kupL/4LqP/+G6kP/hupD/4bqQ/+G6
        kP/hupD/4bqQ/+zNqP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6j//iupP/0q1M/8qnKP/MqDH/zKgv/8yo
        MP/Mpyz/zqs//9TInf/WyqL/hrxf/2u6TP9wulD/b7pP/3K6Uf9nukr/krpj/+W6kv/gupD/4bqQ/+G6
        kP/hupD/4bqQ/+G6kP/hupD/8NOw/+S/lv/guY//4bqQ/+G6kP/huo//4rqT/964gv/NqTH/zKgv/8yo
        L//MqC//zKkx/8ulKP/Qt2f/0sum/9vKpP+mwnv/aLlK/3G6UP9vuk//b7pP/2+6T/9xulH/0bqH/+S6
        kv/gupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/x1bL/6smj/+C4jv/hupD/4bqQ/+G6j//iu5X/27V0/8yo
        Lv/MqC//zKgv/8yoL//LqDL/zagl/9G6a//QyKH/1sed/7TBff9tuUn/b7pR/2+6T/9vuk//b7pP/226
        Tv/Aun3/57qT/+C6j//hupD/4bqQ/+G6kP/hupD/4bqQ//DTsP/v0q//476V/+C5j//hupD/4bqP/+K7
        lP/ctnn/zKgu/8yoL//MqC//zKcx/8+sKP/GnT7/2MCo//Hv3//369z/vda4/266YP9wuUf/b7pR/2+6
        T/9vuk//brpP/8a6gf/mupP/4LqP/+G6kP/hupD/4bqQ/+G6kP/hupD/8NOw//HUsv/ry6b/4bmO/+G6
        kP/hupD/4bqR/+C6i//Oqjn/y6ct/8ynMv/Oqyf/xJpg/59jw//GoeD////////9/f+Q4PX/W9Hp/3TB
        fv9vuUf/cLpR/2y6Tf97ulb/3LqN/+K6kf/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/w07D/8NOw//DU
        sv/nxJ7/4LiN/+G6kP/huo//4ruV/9iyZ//Kpin/zaop/8afT/+jas3/nmLR/6FpyP/z4u3/1vf0/1nP
        7f9Z1Pn/Y9Lx/3S8bP9vuUj/ZrpM/7G6df/nupP/4LqP/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ//DT
        sP/w07D/8NOw//DTsP/lwZn/4LiN/+G6kP/hupD/4bqT/9awX//Oqyf/toKW/6Bh1P+macf/omTI/6d6
        1P93uOv/WNzx/1vd8P9W3v//a9O5/3G5R/+lunD/5LqS/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6
        kP/hupD/8NOw//DTsP/w07D/8NOx//DSr//lwZn/4LiO/+G6kP/hupH/47yS/9mzf/+VbtD/k2fY/5Bm
        2f+AYej/ZVL8/2ZS/P9rgvP/aqPv/2uo7/90nuH/xreG/+a7kv/hupH/4bqQ/+G6kP/hupD/4bqQ/+G6
        kP/hupD/4bqQ/+G6kP/w07D/8NOw//DTsP/w07D/8NSx//DTsP/nxJz/4LiO/+C5kP/jvI7/3LaZ/25d
        9/9iU///Y1X+/19R//9kU///ZFP//2NL//9pTf3/Z0z+/3RX9P/gtZj/4ruO/+C6kP/hupD/4bqQ/+G6
        kP/hupD/4bqQ/+G6kP/hupD/4bqQ//DTsP/w07D/8NOw//DTsP/w07D/8NOx//HUsf/ryaP/4ruS/+C4
        jv/iu4//gWvk/15O//9lVP7/ZVP+/2RT//9kU///ZFX//2RW/v9dT///gGzj/+G7j//hupD/4bqQ/+G6
        kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/8NOw//DTsP/w07D/8NOw//DTsP/w07D/8NOw//HV
        sv/v0a3/5MGc/+jAif+rjbz/W0v//2dW/f9lVP7/ZFP//2RT//9lVP7/Z1X8/1pL//+tj77/6cCK/9+5
        kf/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/w07D/8NOw//DTsP/w07D/8NOw//DT
        sP/w07D/8NOw//HUsf/w1LL/7c2o/+bCmf+Kct3/WEn//2JS/v9kU///ZFP//2NS/v9ZSv//inLd/+K6
        kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ//DTsP/w067/8NKu//DS
        rv/w06//8NKu//DSr//w0q//8NKu/+/Srv/w1LL/89Wv/+vMqv+kjNb/blv4/2NS/v9jUv7/bVr2/5+D
        y//fuZP/47yP/+C5kf/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/79Gt/vPc
        v//99/H/+evc//DTsf/68eX//Pbv//z17P/89u7/893C//DRrf/w07H/8tWw//farP/mybT/zLC9/8mq
        tf/atZr/57+K/+G5jf/fuI//4bmP/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6kP/hupD/4bqQ/+G6
        kP7w0q//8te3//bl0f/038b/8NOw//Xiy//25ND/9uTP//bk0P/y2Ln/8NKu//DTsP/v0rD/7tGx//LV
        r//32a3/9tit//HTrP/rzKn/6Mah/+bCmv/jvZT/4buR/+G6kP/guI7/4LiO/+C5j//huY//4bqP/+G6
        kP/hupD/4bqQ//DUsL/w0q7/79Cq/u/RrP/w07D/79Cr/+/Qqv/v0Kr/79Cq//DSrv/w07D/8NOw//DT
        sP/w07D/8NOw/+7Rsf/u0rH/8NOx//HUsf/x1bL/8dSx/+/Sr//uz6v/68ul/+jHof/nxJ3/5sKZ/+O/
        l//jvZT/4ryR/uG6kP/jvZXXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>